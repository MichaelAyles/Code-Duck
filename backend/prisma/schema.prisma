// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  tier      UserTier @default(FREE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  githubAccounts GitHubAccount[]
  trelloAccounts TrelloAccount[]
  aiRequests     AIRequest[]
}

model GitHubAccount {
  id           String   @id @default(cuid())
  userId       String
  githubId     String   @unique
  username     String
  accessToken  String
  refreshToken String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model TrelloAccount {
  id           String   @id @default(cuid())
  userId       String
  trelloId     String   @unique
  username     String
  accessToken  String
  refreshToken String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model AIRequest {
  id        String   @id @default(cuid())
  userId    String
  command   String
  response  String?
  status    String   @default("pending")
  createdAt DateTime @default(now())
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum UserTier {
  FREE
  PRO
}
